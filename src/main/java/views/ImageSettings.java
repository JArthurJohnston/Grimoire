/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import javax.swing.JFileChooser;
import models.Grimoire;
import models.PixelProcessing.Filters.BrightnessFilter;
import models.PixelProcessing.Filters.ContrastFilter;
import models.PixelProcessing.Filters.GreyscaleFilter;
import models.PixelProcessing.Filters.LuminescenceFilter;
import models.PixelProcessing.Filters.PixelFilter;

/**
 *
 * @author Arthur
 */
@SuppressWarnings("ALL")
public class ImageSettings extends javax.swing.JFrame {

    private final BrightnessFilter brightnessPixelAdjustment;
    private final ContrastFilter contrastPixelAdjustment;
    private final LuminescenceFilter luminescenceFilter;
    private final GreyscaleFilter greyscaleFilter;

    /**
     * Creates new form ImageSettings
     */
    
    public ImageSettings() {
        initComponents();
        contrastPixelAdjustment = new ContrastFilter();
        brightnessPixelAdjustment = new BrightnessFilter();
        luminescenceFilter = new LuminescenceFilter();
        greyscaleFilter = new GreyscaleFilter();
        this.setSliderDefaults();
        this.setLabelDefaults();
    }
    
    private void setLabelDefaults(){
        this.luminescenceLabel.setText(Float.toString(this.luminescenceFilter.getLuminescenceThreashold()));
        this.brightnessLabel.setText(Integer.toString(this.brightnessPixelAdjustment.getBrightnessValue()));
        this.contrastLabel.setText(Float.toString(this.contrastPixelAdjustment.getContrastLevel()));
    }

    private void setSliderDefaults(){
        this.brightnessSlider.setValue(this.brightnessPixelAdjustment.DEFAULT_BRIGHTNESS);
        this.luminescenceSlider.setValue(LuminescenceFilter.DEFAULT_LUMINESCENCE_THREASHOLD);
        this.contrastSlider.setValue((int)this.contrastPixelAdjustment.DEFAULT_CONTRAST_LEVEL);
    }

    public PixelFilter[] getFilters(){
        return new PixelFilter[] {
            this.greyscaleFilter,
            this.brightnessPixelAdjustment, 
            this.contrastPixelAdjustment, 
            this.luminescenceFilter
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        contrastSlider = new javax.swing.JSlider();
        contrastLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        brightnessSlider = new javax.swing.JSlider();
        brightnessLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        luminescenceSlider = new javax.swing.JSlider();
        luminescenceLabel = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();
        greyscaleCheckbox = new javax.swing.JCheckBox();
        decrementLuminescenceButton = new javax.swing.JButton();
        incrementLuminescenceButton = new javax.swing.JButton();
        captureImageButton = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Image Settings");

        jLabel1.setText("Contrast");

        contrastSlider.setMajorTickSpacing(64);
        contrastSlider.setMaximum(255);
        contrastSlider.setMinimum(-255);
        contrastSlider.setMinorTickSpacing(32);
        contrastSlider.setPaintTicks(true);
        contrastSlider.setValue(0);
        contrastSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                contrastSliderStateChanged(evt);
            }
        });

        contrastLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        contrastLabel.setText("0.0");

        jLabel3.setText("Brightness");

        brightnessSlider.setMajorTickSpacing(64);
        brightnessSlider.setMaximum(255);
        brightnessSlider.setMinimum(-255);
        brightnessSlider.setMinorTickSpacing(32);
        brightnessSlider.setPaintTicks(true);
        brightnessSlider.setValue(0);
        brightnessSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                brightnessSliderStateChanged(evt);
            }
        });

        brightnessLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        brightnessLabel.setText("0");

        jLabel5.setText("Luminescence");

        luminescenceSlider.setMajorTickSpacing(100);
        luminescenceSlider.setMaximum(1000);
        luminescenceSlider.setMinorTickSpacing(50);
        luminescenceSlider.setPaintTicks(true);
        luminescenceSlider.setValue(0);
        luminescenceSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                luminescenceSliderStateChanged(evt);
            }
        });

        luminescenceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        luminescenceLabel.setText("0");

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        greyscaleCheckbox.setText("Greyscale");
        greyscaleCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greyscaleCheckboxActionPerformed(evt);
            }
        });

        decrementLuminescenceButton.setText("<");
        decrementLuminescenceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrementLuminescenceButtonActionPerformed(evt);
            }
        });

        incrementLuminescenceButton.setText(">");
        incrementLuminescenceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incrementLuminescenceButtonActionPerformed(evt);
            }
        });

        captureImageButton.setText("Capture Images");
        captureImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                captureImageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(brightnessSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                            .addComponent(contrastSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(decrementLuminescenceButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(luminescenceSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(incrementLuminescenceButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(greyscaleCheckbox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(captureImageButton)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(contrastLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(luminescenceLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(brightnessLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(resetButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contrastSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contrastLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(brightnessSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(brightnessLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(incrementLuminescenceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(decrementLuminescenceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(luminescenceSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(greyscaleCheckbox)
                            .addComponent(captureImageButton))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(luminescenceLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        this.brightnessPixelAdjustment.reset();
        this.contrastPixelAdjustment.reset();
        this.luminescenceFilter.reset();
        this.setLabelDefaults();
        this.setSliderDefaults();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void luminescenceSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_luminescenceSliderStateChanged
        float newGamma = this.luminescenceSlider.getValue() /100.0f;
        this.luminescenceLabel.setText(Float.toString(newGamma));
        this.luminescenceFilter.update(newGamma);
    }//GEN-LAST:event_luminescenceSliderStateChanged

    private void brightnessSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_brightnessSliderStateChanged
        int newBrightness = this.brightnessSlider.getValue();
        this.brightnessLabel.setText(Integer.toString(newBrightness));
        this.brightnessPixelAdjustment.update(newBrightness);
    }//GEN-LAST:event_brightnessSliderStateChanged

    private void contrastSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_contrastSliderStateChanged
        int newContrast = this.contrastSlider.getValue();
        this.contrastLabel.setText(Integer.toString(newContrast));
        this.contrastPixelAdjustment.update(newContrast);
    }//GEN-LAST:event_contrastSliderStateChanged

    private void greyscaleCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greyscaleCheckboxActionPerformed
        this.greyscaleFilter.update(this.greyscaleCheckbox.isSelected());
    }//GEN-LAST:event_greyscaleCheckboxActionPerformed

    private void decrementLuminescenceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrementLuminescenceButtonActionPerformed
        updateLuminescence(-0.01f);
    }//GEN-LAST:event_decrementLuminescenceButtonActionPerformed

    private void incrementLuminescenceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incrementLuminescenceButtonActionPerformed
        updateLuminescence(0.01f);
    }//GEN-LAST:event_incrementLuminescenceButtonActionPerformed

    private void captureImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_captureImageButtonActionPerformed
        if(this.captureImageButton.isSelected()){
            Grimoire.imageWriter.start();
        } else {
            Grimoire.imageWriter.stop();
        }
    }//GEN-LAST:event_captureImageButtonActionPerformed

    private void updateLuminescence(float incrementalValue) {
        // TODO add your handling code here:
        float newValue = this.luminescenceFilter.getLuminescenceThreashold() + incrementalValue;
        this.luminescenceFilter.update(newValue);
        this.luminescenceLabel.setText(Float.toString(newValue));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel brightnessLabel;
    private javax.swing.JSlider brightnessSlider;
    private javax.swing.JToggleButton captureImageButton;
    private javax.swing.JLabel contrastLabel;
    private javax.swing.JSlider contrastSlider;
    private javax.swing.JButton decrementLuminescenceButton;
    private javax.swing.JCheckBox greyscaleCheckbox;
    private javax.swing.JButton incrementLuminescenceButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel luminescenceLabel;
    private javax.swing.JSlider luminescenceSlider;
    private javax.swing.JButton resetButton;
    // End of variables declaration//GEN-END:variables
}
