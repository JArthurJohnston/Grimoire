/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import models.PixelProcessing.BrightnessPixelAdjustment;
import models.PixelProcessing.ContrastPixelAdjustment;
import models.PixelProcessing.PixelAdjustment;

/**
 *
 * @author Arthur
 */
@SuppressWarnings("ALL")
public class ImageSettings extends javax.swing.JFrame {

    private final BrightnessPixelAdjustment brightnessPixelAdjustment;
    private final ContrastPixelAdjustment contrastPixelAdjustment;

    /**
     * Creates new form ImageSettings
     */
    
    public ImageSettings() {
        initComponents();
        contrastPixelAdjustment = new ContrastPixelAdjustment();
        brightnessPixelAdjustment = new BrightnessPixelAdjustment();
//        this.gammaAdjustment = new GammaAdjustment();
        this.setSliderDefaults();
        this.setLabelDefaults();
    }
    
    private void setLabelDefaults(){
//        this.gammaLabel.setText(Float.toString(this.gammaAdjustment.getGammaAdjustment()));
        this.brightnessLabel.setText(Integer.toString(this.brightnessPixelAdjustment.getBrightnessValue()));
        this.contrastLabel.setText(Float.toString(this.contrastPixelAdjustment.getContrastLevel()));
    }

    private void setSliderDefaults(){
        this.brightnessSlider.setValue(this.brightnessPixelAdjustment.DEFAULT_BRIGHTNESS);
//        this.gammaSlider.setValue((int)this.gammaAdjustment.defaultGammaAdjustment);
        this.contrastSlider.setValue((int)this.contrastPixelAdjustment.DEFAULT_CONTRAST_LEVEL);

    }

    public PixelAdjustment[] getAdjustments(){
//        return new Adjustment[] {this.brightnessAdjustment, this.contrastAdjustment, this.gammaAdjustment};
        return new PixelAdjustment[] {this.brightnessPixelAdjustment, this.contrastPixelAdjustment};
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        contrastSlider = new javax.swing.JSlider();
        contrastLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        brightnessSlider = new javax.swing.JSlider();
        brightnessLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        gammaSlider = new javax.swing.JSlider();
        gammaLabel = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Image Settings");

        jLabel1.setText("Contrast");

        contrastSlider.setMajorTickSpacing(64);
        contrastSlider.setMaximum(255);
        contrastSlider.setMinimum(-255);
        contrastSlider.setMinorTickSpacing(32);
        contrastSlider.setPaintTicks(true);
        contrastSlider.setValue(0);
        contrastSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                contrastSliderStateChanged(evt);
            }
        });

        contrastLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        contrastLabel.setText("0.0");

        jLabel3.setText("Brightness");

        brightnessSlider.setMajorTickSpacing(64);
        brightnessSlider.setMaximum(255);
        brightnessSlider.setMinimum(-255);
        brightnessSlider.setMinorTickSpacing(32);
        brightnessSlider.setPaintTicks(true);
        brightnessSlider.setValue(0);
        brightnessSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                brightnessSliderStateChanged(evt);
            }
        });

        brightnessLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        brightnessLabel.setText("0");

        jLabel5.setText("Gamma");

        gammaSlider.setMajorTickSpacing(100);
        gammaSlider.setMaximum(1000);
        gammaSlider.setMinimum(-1000);
        gammaSlider.setMinorTickSpacing(50);
        gammaSlider.setPaintTicks(true);
        gammaSlider.setValue(0);
        gammaSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                gammaSliderStateChanged(evt);
            }
        });

        gammaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gammaLabel.setText("0");

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(gammaSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                            .addComponent(brightnessSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(contrastSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(contrastLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(gammaLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(brightnessLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(resetButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contrastSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contrastLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(brightnessSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(brightnessLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gammaSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(gammaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        this.brightnessPixelAdjustment.reset();
//        this.gammaAdjustment.reset();
        this.contrastPixelAdjustment.reset();
        this.setLabelDefaults();
        this.setSliderDefaults();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void gammaSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_gammaSliderStateChanged
//        float newGamma = this.gammaSlider.getValue() /100.0f;
//        this.gammaLabel.setText(Float.toString(newGamma));
//        this.gammaAdjustment.update(newGamma);
    }//GEN-LAST:event_gammaSliderStateChanged

    private void brightnessSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_brightnessSliderStateChanged
        int newBrightness = this.brightnessSlider.getValue();
        this.brightnessLabel.setText(Integer.toString(newBrightness));
        this.brightnessPixelAdjustment.update(newBrightness);
    }//GEN-LAST:event_brightnessSliderStateChanged

    private void contrastSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_contrastSliderStateChanged
        int newContrast = this.contrastSlider.getValue();
        this.contrastLabel.setText(Integer.toString(newContrast));
        this.contrastPixelAdjustment.update(newContrast);
    }//GEN-LAST:event_contrastSliderStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel brightnessLabel;
    private javax.swing.JSlider brightnessSlider;
    private javax.swing.JLabel contrastLabel;
    private javax.swing.JSlider contrastSlider;
    private javax.swing.JLabel gammaLabel;
    private javax.swing.JSlider gammaSlider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton resetButton;
    // End of variables declaration//GEN-END:variables
}
