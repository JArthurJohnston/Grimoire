/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.LinkedList;
import java.util.List;
import models.Grimoire;
import models.PixelProcessing.Detectors.LuminescenceDetector;
import models.PixelProcessing.Filters.*;
import models.UserSettings;

@SuppressWarnings("ALL")
public class ImageSettings extends javax.swing.JFrame {

    private final BrightnessFilter brightnessPixelAdjustment;
    private final ContrastFilter contrastPixelAdjustment;
    private final LuminescenceFilter luminescenceFilter;
    private final PixelFilter greyscaleFilter;
    public final LuminescenceDetector luminescenceDetector;
    
    public ImageSettings() {
        initComponents();
        contrastPixelAdjustment = new ContrastFilter();
        brightnessPixelAdjustment = new BrightnessFilter();
        luminescenceFilter = new LuminescenceFilter();
        greyscaleFilter = new AverageGrayscaleFilter();
        luminescenceDetector = new LuminescenceDetector();
        this.setSliderDefaults();
        this.setLabelDefaults();
    }
    
    private void setLabelDefaults(){
        this.luminescenceLabel.setText(Float.toString(UserSettings.Default.LUMINESCENCE_THRESHOLD /1000.0f));
        this.brightnessLabel.setText(Integer.toString(UserSettings.Default.BRIGHTNESS));
        this.contrastLabel.setText(Float.toString(this.contrastPixelAdjustment.getContrastLevel()));
        this.scanlineLabel.setText(Integer.toString(UserSettings.Default.SCANLINES));
        this.motionDetectionLabel.setText(Integer.toString(UserSettings.Default.MOTION_DETECTION_RADIUS));
        this.blurLabel.setText(Integer.toString(UserSettings.Default.BLUR_SIZE));
    }

    private void setSliderDefaults(){
        this.brightnessSlider.setValue(UserSettings.Default.BRIGHTNESS);
        this.luminescenceSlider.setValue(UserSettings.Default.LUMEN_DISPLAY_VALUE);
        this.contrastSlider.setValue((int)this.contrastPixelAdjustment.DEFAULT_CONTRAST_LEVEL);
        this.motionDetectionSlider.setValue(UserSettings.Default.MOTION_DETECTION_RADIUS);
        this.grayscaleToggleButton.setSelected(UserSettings.Default.GRAYSCALE);
        this.captureImageButton.setSelected(false);
        this.blurSlider.setValue(UserSettings.Default.BLUR_SIZE);
    }

    public PixelFilter[] getFilters(){
        return new PixelFilter[] {
            this.greyscaleFilter,
            this.brightnessPixelAdjustment,
            this.contrastPixelAdjustment,
            this.luminescenceFilter
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        contrastSlider = new javax.swing.JSlider();
        contrastLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        brightnessSlider = new javax.swing.JSlider();
        brightnessLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        luminescenceSlider = new javax.swing.JSlider();
        luminescenceLabel = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();
        decrementLuminescenceButton = new javax.swing.JButton();
        incrementLuminescenceButton = new javax.swing.JButton();
        captureImageButton = new javax.swing.JToggleButton();
        scanlineSlider = new javax.swing.JSlider();
        scanlineLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        saveSettingsButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        motionDetectionSlider = new javax.swing.JSlider();
        motionDetectionLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        clusterDistanceSlider = new javax.swing.JSlider();
        clusterDistanceLabel = new javax.swing.JLabel();
        grayscaleToggleButton = new javax.swing.JToggleButton();
        blurSlider = new javax.swing.JSlider();
        jLabel7 = new javax.swing.JLabel();
        blurLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Image Settings");

        jLabel1.setText("Contrast");

        contrastSlider.setMajorTickSpacing(64);
        contrastSlider.setMaximum(255);
        contrastSlider.setMinimum(-255);
        contrastSlider.setMinorTickSpacing(32);
        contrastSlider.setPaintTicks(true);
        contrastSlider.setValue(0);
        contrastSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                contrastSliderStateChanged(evt);
            }
        });

        contrastLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        contrastLabel.setText("0.0");

        jLabel3.setText("Brightness");

        brightnessSlider.setMajorTickSpacing(64);
        brightnessSlider.setMaximum(255);
        brightnessSlider.setMinimum(-255);
        brightnessSlider.setMinorTickSpacing(32);
        brightnessSlider.setPaintTicks(true);
        brightnessSlider.setValue(0);
        brightnessSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                brightnessSliderStateChanged(evt);
            }
        });

        brightnessLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        brightnessLabel.setText("0");

        jLabel5.setText("Luminescence");

        luminescenceSlider.setMajorTickSpacing(1000);
        luminescenceSlider.setMaximum(1000);
        luminescenceSlider.setMinorTickSpacing(50);
        luminescenceSlider.setPaintTicks(true);
        luminescenceSlider.setValue(0);
        luminescenceSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                luminescenceSliderStateChanged(evt);
            }
        });

        luminescenceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        luminescenceLabel.setText("0");

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        decrementLuminescenceButton.setText("<");
        decrementLuminescenceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrementLuminescenceButtonActionPerformed(evt);
            }
        });

        incrementLuminescenceButton.setText(">");
        incrementLuminescenceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incrementLuminescenceButtonActionPerformed(evt);
            }
        });

        captureImageButton.setText("Capture Images");
        captureImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                captureImageButtonActionPerformed(evt);
            }
        });

        scanlineSlider.setMajorTickSpacing(10);
        scanlineSlider.setMaximum(50);
        scanlineSlider.setMinimum(1);
        scanlineSlider.setMinorTickSpacing(1);
        scanlineSlider.setPaintTicks(true);
        scanlineSlider.setValue(1);
        scanlineSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                scanlineSliderStateChanged(evt);
            }
        });

        scanlineLabel.setText("000");

        jLabel4.setText("Scanlines");

        saveSettingsButton.setText("Save Settings");
        saveSettingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSettingsButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Motion Detection Distance");

        motionDetectionSlider.setMajorTickSpacing(10);
        motionDetectionSlider.setMaximum(50);
        motionDetectionSlider.setMinimum(1);
        motionDetectionSlider.setMinorTickSpacing(5);
        motionDetectionSlider.setPaintTicks(true);
        motionDetectionSlider.setValue(15);
        motionDetectionSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                motionDetectionSliderStateChanged(evt);
            }
        });

        motionDetectionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        motionDetectionLabel.setText("15");

        jLabel6.setText("Cluster Contains Distance");

        clusterDistanceSlider.setMajorTickSpacing(10);
        clusterDistanceSlider.setMaximum(50);
        clusterDistanceSlider.setMinorTickSpacing(1);
        clusterDistanceSlider.setPaintTicks(true);
        clusterDistanceSlider.setValue(7);
        clusterDistanceSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                clusterDistanceSliderStateChanged(evt);
            }
        });

        clusterDistanceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clusterDistanceLabel.setText("7");

        grayscaleToggleButton.setText("Grayscale Image");
        grayscaleToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grayscaleToggleButtonActionPerformed(evt);
            }
        });

        blurSlider.setMajorTickSpacing(5);
        blurSlider.setMaximum(50);
        blurSlider.setMinimum(1);
        blurSlider.setMinorTickSpacing(1);
        blurSlider.setPaintTicks(true);
        blurSlider.setPaintTrack(false);
        blurSlider.setValue(1);
        blurSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                blurSliderStateChanged(evt);
            }
        });

        jLabel7.setText("Blurriness");

        blurLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        blurLabel.setText("1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(contrastSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(decrementLuminescenceButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(luminescenceSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(incrementLuminescenceButton)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(luminescenceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(contrastLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(saveSettingsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(252, 256, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(scanlineSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(clusterDistanceLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(scanlineLabel)
                                .addGap(2, 2, 2))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(motionDetectionSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel6))
                            .addComponent(clusterDistanceSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(motionDetectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(blurSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(12, 12, 12)))
                        .addComponent(blurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(grayscaleToggleButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(captureImageButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(brightnessSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(brightnessLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(contrastLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(contrastSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(brightnessLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(brightnessSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(luminescenceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(decrementLuminescenceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(luminescenceSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(incrementLuminescenceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scanlineSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scanlineLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(clusterDistanceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clusterDistanceSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(motionDetectionSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(motionDetectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(blurLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(blurSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grayscaleToggleButton)
                    .addComponent(captureImageButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveSettingsButton))
                .addGap(7, 7, 7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        this.brightnessPixelAdjustment.reset();
        this.contrastPixelAdjustment.reset();
        this.luminescenceFilter.reset();
        this.setLabelDefaults();
        this.setSliderDefaults();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void luminescenceSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_luminescenceSliderStateChanged
        float newGamma = this.luminescenceSlider.getValue() /1000.0f;
        this.luminescenceLabel.setText(Float.toString(newGamma));
        this.luminescenceDetector.updateThreshold(newGamma);
        this.luminescenceFilter.update(newGamma);
    }//GEN-LAST:event_luminescenceSliderStateChanged

    private void brightnessSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_brightnessSliderStateChanged
        int newBrightness = this.brightnessSlider.getValue();
        this.brightnessLabel.setText(Integer.toString(newBrightness));
        this.brightnessPixelAdjustment.update(newBrightness);
    }//GEN-LAST:event_brightnessSliderStateChanged

    private void contrastSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_contrastSliderStateChanged
        int newContrast = this.contrastSlider.getValue();
        this.contrastLabel.setText(Integer.toString(newContrast));
        this.contrastPixelAdjustment.update(newContrast);
    }//GEN-LAST:event_contrastSliderStateChanged

    private void decrementLuminescenceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrementLuminescenceButtonActionPerformed
        updateLuminescence(-0.01f);
    }//GEN-LAST:event_decrementLuminescenceButtonActionPerformed

    private void incrementLuminescenceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incrementLuminescenceButtonActionPerformed
        updateLuminescence(0.01f);
    }//GEN-LAST:event_incrementLuminescenceButtonActionPerformed

    private void captureImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_captureImageButtonActionPerformed
        if(this.captureImageButton.isSelected()){
            Grimoire.imageWriter.start();
        } else {
            Grimoire.imageWriter.stop();
        }
    }//GEN-LAST:event_captureImageButtonActionPerformed

    private void scanlineSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_scanlineSliderStateChanged
            int newValue = this.scanlineSlider.getValue();
            UserSettings.SCANLINES = newValue;
            this.scanlineLabel.setText(Integer.toString(newValue));
    }//GEN-LAST:event_scanlineSliderStateChanged

    private void saveSettingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSettingsButtonActionPerformed
        try {
            // TODO add your handling code here:
            List<String> content = new LinkedList<String>();
            content.add("Brightness: " + Integer.toString(this.brightnessPixelAdjustment.getBrightnessValue()));
            content.add("Contrast: " + this.contrastPixelAdjustment.getContrastLevel());
            content.add("Luminescence: " + UserSettings.LUMINESCENCE_THRESHOLD);
            content.add("Scanning: " + this.scanlineSlider.getValue());
            content.add("Motion Detection Radius: " + UserSettings.MOTION_DETECTION_RADIUS);
            content.add("Clustering Distance: " + UserSettings.CLUSTER_CONTAINS_DIAMETER);
            content.add("Blur: " + UserSettings.BLUR_SIZE);
            
            final Path settingsFile = Paths.get("./res/settings.txt");
            Files.write(settingsFile, content, Charset.forName("UTF-8"));
        } catch (IOException ex) {
            System.out.println("Couldn't write settings file: " + ex.getMessage());
        }
    }//GEN-LAST:event_saveSettingsButtonActionPerformed

    private void motionDetectionSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_motionDetectionSliderStateChanged
        int newValue = this.motionDetectionSlider.getValue();
        UserSettings.MOTION_DETECTION_RADIUS = newValue;
        this.motionDetectionLabel.setText(Integer.toString(newValue));
    }//GEN-LAST:event_motionDetectionSliderStateChanged

    private void clusterDistanceSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_clusterDistanceSliderStateChanged
        // TODO add your handling code here:
        int newValue = this.clusterDistanceSlider.getValue();
        this.clusterDistanceLabel.setText(Integer.toString(newValue));
        UserSettings.CLUSTER_CONTAINS_DIAMETER = newValue;
    }//GEN-LAST:event_clusterDistanceSliderStateChanged

    private void grayscaleToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grayscaleToggleButtonActionPerformed
        // TODO add your handling code here:
        UserSettings.SHOULD_GRAYSCALE_IMAGE = this.grayscaleToggleButton.isSelected();
    }//GEN-LAST:event_grayscaleToggleButtonActionPerformed

    private void blurSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_blurSliderStateChanged
        int newVal = this.blurSlider.getValue();
        if(newVal % 2 == 0 ){
            newVal += 1;
            this.blurSlider.setValue(newVal);
        }
        UserSettings.BLUR_SIZE = newVal;
        this.blurLabel.setText(Integer.toString(newVal));
    }//GEN-LAST:event_blurSliderStateChanged

    private void updateLuminescence(float incrementalValue) {
        float newValue = UserSettings.LUMINESCENCE_THRESHOLD + incrementalValue;
        this.luminescenceFilter.update(newValue);
        this.luminescenceDetector.updateThreshold(newValue);
        this.luminescenceLabel.setText(Float.toString(newValue));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel blurLabel;
    private javax.swing.JSlider blurSlider;
    private javax.swing.JLabel brightnessLabel;
    private javax.swing.JSlider brightnessSlider;
    private javax.swing.JToggleButton captureImageButton;
    private javax.swing.JLabel clusterDistanceLabel;
    private javax.swing.JSlider clusterDistanceSlider;
    private javax.swing.JLabel contrastLabel;
    private javax.swing.JSlider contrastSlider;
    private javax.swing.JButton decrementLuminescenceButton;
    private javax.swing.JToggleButton grayscaleToggleButton;
    private javax.swing.JButton incrementLuminescenceButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel luminescenceLabel;
    private javax.swing.JSlider luminescenceSlider;
    private javax.swing.JLabel motionDetectionLabel;
    private javax.swing.JSlider motionDetectionSlider;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton saveSettingsButton;
    private javax.swing.JLabel scanlineLabel;
    private javax.swing.JSlider scanlineSlider;
    // End of variables declaration//GEN-END:variables
}
